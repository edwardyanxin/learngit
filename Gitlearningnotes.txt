$ git config --global user.name "edwardyanxin"

$ git config --global user.email "yanxin13@mails.ucas.ac.cn"

#创建一个版本库，pwd命令用于显示当前目录
$ mkdir learngit
$ cd learngit
$ pwd

#通过git init命令把这个目录变成Git可以管理的仓库
$ git init
$ git add readme.txt
$ git add file2.txt file3.txt
$ git commit -m "add 3 files "

#掌握仓库当前的状态
$ git status 

# 看看具体内容修改
$ git diff readme.txt 

#查看提交历史
$ git log
$ git log --pretty=oneline

#退出
q

#回溯版本 HEAD  HEAD^ HEAD^^ HEAD~100
$ git reset --hard HEAD^
$ git reset --hard 1094a

#查看当前内容
$ cat readme.txt

#查看命令历史id
$ git reflog

#撤销工作区的修改， git checkout 其实是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。
$ git checkout --readme.txt

#撤销暂存区的修改,将其放回到工作区
$ git reset HEAD readme.txt

#删除文件
$ rm test.txt

#从版本库删除文件
$ git rm test.txt
$ git commit -m "remove test.txt"

#在leargit仓库下
$ git remote add origin git@github.com:edwardyanxin/learngit.git
$ git remote rm origin #删除origin
$ git push -u origin master  #第一次使用-u
$ git push origin master     #后面使用

#克隆版本库
$ git clone git@github.com:edwardyanxin/gitskills.git

1.cd : 切换到哪个目录下， 如 cd e:\fff  切换 E 盘下面的fff 目录。
　　当我们用cd 进入文件夹时,我们可以使用 通配符*, cd f*,  如果E盘下只有一个f开头的文件夹,它就会进入到这个文件夹.
2.cd .. 回退到上一个目录， 注意，cd 和两个点点..之间有一个空格。
3.pwd : 显示当前目录路径。
4.ls(ll): 都是列出当前目录中的所有文件，只不过ll(两个ll)列出的内容更为详细。
5.touch : 新建一个文件 如 touch index.js 就会在当前目录下新建一个index.js文件。
6.rm:  删除一个文件, rm index.js 就会把index.js文件删除.
7.mkdir: 新建一个目录,就是新建一个文件夹. 如mkdir src 新建src 文件夹.
8.rm -r : 删除一个文件夹,  rm -r src 删除src目录， 好像不能用通配符。
9.mv 移动文件, mv index.html src   index.html 是我们要移动的文件, src 是目标文件夹,当然, 这样写,必须保证文件和目标文件夹在同一目录下.
10.reset 清屏，把git bash命令窗口中的所有内容清空。


#更新fork，保持同步
#给fork配置远程库
$ git remote -v  #查看远程状态
$ git remote add upstream  #确定一个fork远程的上游仓库
$ git fetch upstream  #从上游仓库fetch分支和提交点，提交给本地master，并储存在一个本地分支upstream/master
$ git checkout master  #切换回本地主分支
$ git merge upstream/master #把upstream/master分支合并到本地master上
$ git push origin master